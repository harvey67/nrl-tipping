{"version":3,"sources":["firebase.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","app","initializeApp","this","auth","db","firestore","u_id","currentUserID","currentUsername","a","console","log","firebase","database","ref","once","k","x","teamList","val","v","nrlRecords","App","games","teamData","document","getElementById","style","display","getElementsByClassName","getGames","getNrlRecords","getHtml","getCharts","printForm","f","form","split","styledForm","i","length","t","Team","stadiumRecord","Stadium_Record","ctx","getContext","Chart","type","data","labels","datasets","Math","floor","backgroundColor","borderColor","borderWidth","options","responsive","legend","elements","center","text","color","fontStyle","sidePadding","g","Home_Team","innerHTML","record","Results","b","c","Away_Team","canvasClass","cssFloat","myHtml","homeTeam","awayTeam","stadium","Stadium","date","Date","link","Link","homeForm","homePos","awayForm","awayPos","Form","Position","t1","t2","logo1","toLowerCase","replace","logo2","useEffect","startUp","className","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f1ad0cf4.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\nimport app from 'firebase/app';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAHN7qi76sqh-ZHSlAGryJEbTvxcsvFJaY\",\r\n    authDomain: \"user-database-test-9ee1d.firebaseapp.com\",\r\n    databaseURL: \"https://user-database-test-9ee1d.firebaseio.com\",\r\n    projectId: \"user-database-test-9ee1d\",\r\n    storageBucket: \"user-database-test-9ee1d.appspot.com\",\r\n    messagingSenderId: \"425239506606\",\r\n    appId: \"1:425239506606:web:decf3cc0780d2d8e9d073f\"\r\n};\r\n\r\n\r\nclass Firebase {\r\n    \r\n    constructor() {\r\n        app.initializeApp(firebaseConfig);\r\n        this.auth = app.auth();\r\n        this.db = app.firestore;\r\n        this.u_id = 0;\r\n        this.currentUserID = 0;\r\n        this.currentUsername = \"\";        \r\n    }\r\n\r\n    async getGames() {\r\n        console.log(\"getting team lists...\");\r\n        // get a list of all homework from userid\r\n        let db = \"nrlGames\";\r\n        let x = await firebase.database().ref(db).once('value');\r\n        let teamList = [];\r\n        let v;\r\n        for (let k in x.val()) {\r\n            v = x.val()[k];\r\n            teamList = v;\r\n        }\r\n        console.log(\"done\");\r\n        return teamList;\r\n    }\r\n\r\n    async getNrlRecords() {\r\n        console.log(\"getting nrl records data...\");\r\n        // get a list of all homework from userid\r\n        let db = \"nrlTipping\";\r\n        let x = await firebase.database().ref(db).once('value');\r\n        let nrlRecords = [];\r\n        let v;\r\n        for (let k in x.val()) {\r\n            v = x.val()[k];\r\n            nrlRecords = v;\r\n        }\r\n        console.log(\"done\");\r\n        return nrlRecords;\r\n    }\r\n}\r\n\r\nexport default new Firebase();\r\n","import React, {useEffect} from 'react';\nimport './App.css';\nimport firebase from './firebase';\nimport Chart from \"chart.js\";\n\nconst App = () => {\n  let games;\n  let teamData;\n  useEffect(() => {        \n    startUp();\n  });\n\n  async function startUp() {\n    console.log(\"starting...\");\n    \n    document.getElementById(\"myHtml\").style.display = \"none\";\n    document.getElementsByClassName(\"loadingData\")[0].style.display = \"block\";\n\n    games = await firebase.getGames();\n    teamData = await firebase.getNrlRecords();\n    document.getElementsByClassName(\"loadingData\")[0].style.display = \"none\";\n    getHtml();\n    getCharts();\n    document.getElementById(\"myHtml\").style.display = \"block\";\n  }\n\n  function printForm(f) {\n    let form = f.split(\"\");\n    let styledForm = \"<div class='form'>\";\n    for (let i = 0; i < form.length; i++) {\n      if (form[i] === \"W\") {\n        styledForm += \"<div class='formW'>W</div>\";\n      } else if (form[i] === \"L\") {\n        styledForm += \"<div class='formL'>L</div>\";\n      } else {\n        styledForm += \"<div class='formD'>D</div>\";\n      }\n    }\n    styledForm += \"</div>\";\n    return styledForm;\n  }\n\n  function getCharts() {\n    for (let i = 0; i < teamData.length; i++) {\n      let t = teamData[i].Team;\n      let stadiumRecord = teamData[i].Stadium_Record;\n      let ctx = document.getElementById(t + \"CanvasID\").getContext('2d');\n      new Chart(ctx, {\n          type: 'doughnut',\n          data: {\n              labels: ['Losses %', 'Wins %'],\n              datasets: [{\n                  data: [100 - Math.floor(stadiumRecord), Math.floor(stadiumRecord)],\n                  backgroundColor: [\n                    'rgba(255, 0, 0, 0.5)',\n                    'rgba(0, 255, 0, 0.5)'\n                  ],\n                  borderColor: [\n                    'rgba(0, 0, 0, 0.4)',\n                    'rgba(0, 0, 0, 0.4)'\n                  ],\n                  borderWidth: 1\n              }]\n          },\n          options: {\n            responsive: true,\n            legend: {\n              display: false\n            },\n            elements: {\n              center: {\n                text: Math.floor(stadiumRecord) + \"%\",\n                color: '#777777', // Default is #000000\n                fontStyle: 'Arial', // Default is Arial\n                sidePadding: 50, // Default is 20 (as a percentage)\n              }\n            }\n          }          \n      });\n      /*\n      Chart.pluginService.register({\n        beforeDraw: function (chart) {\n          if (chart.config.options.elements.center) {\n            var width = chart.chart.width,\n                height = chart.chart.height,\n                ctx = chart.chart.ctx;\n            ctx.restore();\n            ctx.font = \"24px Noto Sans JP\";\n            ctx.textBaseline = \"middle\";\n            var text = chart.config.options.elements.center.text,\n                textX = Math.round((width - ctx.measureText(text).width) / 2),\n                textY = height / 2;\n            ctx.fillText(text, textX, textY);\n            ctx.save();\n          }\n        }\n      });\n      */\n\n      for (let g = 0; g < games.length; g++) {\n        if (t === games[g].Home_Team[0]) {\n          document.getElementById(t + \"homeRecordID\").innerHTML = Math.floor(stadiumRecord) + \"%\";\n          let record = teamData[i].Results;\n          let a = record.split(\",\")[0];\n          let b = record.split(\",\")[1];\n          let c = record.split(\",\")[2];\n          let ctx = document.getElementById(t + \"CanvasRecordID\").getContext('2d');\n          new Chart(ctx, {\n              type: 'doughnut',\n              data: {\n                  labels: [games[g].Away_Team[0], 'Draws', games[g].Home_Team[0]],\n                  datasets: [{\n                      data: [c, b, a],\n                      backgroundColor: [\n                        'rgba(252, 107, 3, 0.6)',\n                        'rgba(125, 125, 125, 0.5)',\n                        'rgba(0, 0, 255, 0.5)'\n                      ],\n                      borderColor: [\n                        'rgba(0, 0, 0, 0.4)',\n                        'rgba(0, 0, 0, 0.4)',\n                        'rgba(0, 0, 0, 0.4)'\n                      ],\n                      borderWidth: 1\n                  }]\n              },\n              options: {\n                responsive: true,\n                legend: {\n                  display: false\n                }\n              }\n          });\n        } \n        if (t === games[g].Away_Team[0]) {\n          document.getElementById(t + \"awayRecordID\").innerHTML = Math.floor(stadiumRecord) + \"%\";\n        }\n      }\n    }\n\n    let canvasClass = document.getElementsByClassName(\"canvasClass\");\n    for (let i = 0; i < canvasClass.length; i++) {\n      if (i % 2 === 0) {\n        canvasClass[i].style.cssFloat  = \"right\";\n      } else {\n        canvasClass[i].style.cssFloat  = \"left\";\n      }\n    }\n  }\n  \n  function getHtml() {\n    let myHtml = \"\";\n    for (let g  = 0; g < games.length; g++) {\n      let homeTeam = games[g].Home_Team[0];\n      let awayTeam = games[g].Away_Team[0];\n      let stadium = games[g].Stadium[0];\n      let date = games[g].Date[0];\n      let link =  games[g].Link[0];\n      let homeForm, homePos, awayForm, awayPos;\n      for (let i = 0; i < teamData.length; i += 1){\n        if (homeTeam === teamData[i].Team) {\n          homeForm = teamData[i].Form;\n          homePos = teamData[i].Position;\n        } else if (awayTeam === teamData[i].Team) {\n          awayForm = teamData[i].Form;\n          awayPos = teamData[i].Position;\n        }\n      }\n\n      let t1 = homeTeam;\n      let t2 = awayTeam;\n\n      let logo1 = \"https://www.nrl.com/client/dist/logos/\" + t1.toLowerCase().replace(\" \", \"-\") + \"-badge.svg?bust=202103101\";\n      let logo2 = \"https://www.nrl.com/client/dist/logos/\" + t2.toLowerCase().replace(\" \", \"-\") + \"-badge.svg?bust=202103101\";\n      myHtml += `\n        <div class=\"match\">\n          <div class=\"heading\">\n            <h3>` + date + `</h3>\n            <a href='` + link + `' target=\"_blank\">` + stadium + `</a>\n            <p id='referenceID'><i>* Data is taken since 2000</i></p>\n          </div>\n          <br>\n          <hr>\n          <div class=\"teams\">\n            <p class=\"homeStadiumRecord\" id=\"` + t1 + `homeRecordID\">0%</p>\n            <p class=\"awayStadiumRecord\" id=\"` + t2 + `awayRecordID\">0%</p>\n            <div class=\"homeTeam\">\n              <h3>` + t1 + `</h3>\n              <p><i>` + homePos + `</i></p>\n              <img src='` + logo1 + `' />\n              <p>` + printForm(homeForm) + `</p>\n              <br>\n              <hr>\n              <h4>` + t1 + ` record at ` + stadium.split(\",\")[0] + `</h4>\n              <div class=\"canvasClass\"><canvas id=\"` + t1 + `CanvasID\" width=\"100\" height=\"100\"></canvas></div>\n            </div>\n            <br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>\n            <hr>\n            <h4>` + t1 + ` and ` + t2 + ` Head to Head record</h4>\n            <div class=\"canvasClassRecord\"><canvas id=\"` + t1 + `CanvasRecordID\" width=\"100\" height=\"100\"></canvas></div>\n            <div class=\"awayTeam\">\n              <h3>` + t2 + `</h3>\n              <p><i>` + awayPos + `</i></p>\n              <img src='` + logo2 + `' />\n              <p>` + printForm(awayForm) + `</p>\n              <br>\n              <hr>\n              <h4>` + t2 + ` record at ` + stadium.split(\",\")[0] + `</h4>\n              <div class=\"canvasClass\"><canvas id=\"` + t2 + `CanvasID\" width=\"100\" height=\"100\"></canvas></div>\n            </div>\n          </div>\n        </div>\n        <br>\n      `;\n    }\n    document.getElementById(\"myHtml\").innerHTML = myHtml;\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"loadingData\">\n        <br /><br />\n        Getting data from database...\n        <br /><br />\n        <div className=\"spinner loading\"></div>\n      </div>      \n      <br />\n      <div id=\"myHtml\"></div>\n      <br /><br />\n      \n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}